(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{478:function(e,t,a){"use strict";a.r(t);var r=a(2),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"journal-day-1-week-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#journal-day-1-week-10"}},[e._v("#")]),e._v(" Journal Day 1 - Week 10")]),e._v(" "),a("h2",{attrs:{id:"daily-journal-questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daily-journal-questions"}},[e._v("#")]),e._v(" Daily Journal Questions")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("What are the three categories of data types? How are they different?")]),e._v(" "),a("p",[e._v("Value: Variables of this data type directly contain values\nReference: contains a pointer to another memory location that holds the data\nPointer:")])]),e._v(" "),a("li",[a("p",[e._v("What are the Value-type data types? What differences do you notice from JavaScript?")]),e._v(" "),a("p",[e._v("Value data types directly contain values within its own memory space. The main difference, is that any time it is referenced, it creates a new instance of that variable. So if the value changes, it doesnt effect the original value, just that instance of the variable.")])]),e._v(" "),a("li",[a("p",[e._v("In your own words how do Reference types get stored in memory? How does this differ from Value types?")]),e._v(" "),a("p",[e._v("Reference types get stored memory by referencing a variable elsewhere in the code. Reference types do not have its own value, it is borrowing that value from something else.")])])]),e._v(" "),a("h2",{attrs:{id:"day-1-week-10-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-1-week-10-project"}},[e._v("#")]),e._v(" Day 1 Week 10 -  Project")]),e._v(" "),a("p",[e._v("https://github.com/danielfasula/rockpaperscissors-with-csharp")])])}),[],!1,null,null,null);t.default=o.exports}}]);